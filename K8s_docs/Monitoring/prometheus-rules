---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
      - name: aoi
        image: sanjeevkt720/prometheus-demo
        ports:
        - containerPort: 3000

---
apiVersion: v1
kind: Service
metadata:
  name: api-service
  labels:
    job: node-api
    app: api
spec:
  selector:
    app: api
  ports:
    - name: web
      protocol: TCP
      port: 3000
      targetPort: 3000
  type: ClusterIP

---
  apiVersion: monitoring.coreos.com/v1
  kind: ServiceMonitor
  metadata:
    name: api-service-monitor
    labels:
      release: prometheus
      app: prometheus
  spec:
   jobLabel: job
   selector:
    matchLabels:
      app: api
   endpoints:
   - port: web
     path: /swagger-stats/metrics
     interval: 30s

---
# diffrent file prom-rules.yaml
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: example-rule
  labels:
     release: prometheus
spec:
  groups:
  - name: HighRequestLatency-alerts
    rules:
    - alert: HighRequestLatency
      expr: job:request_latency_seconds:mean5m{job="api-server"} > 0.5
      for: 10m
      labels:
        severity: critical
      annotations:
        summary: "High Request Latency for (instance {{ $labels.instance }})"

  - name: TargetDown-alerts
    rules:
    - alert: TargetDown
      expr: up == 0
      for: 5m
      labels:
        severity: critical
        job: "{{ $labels.job }}"
        instance: "{{ $labels.instance }}"
      annotations:
       summary: "Target is down (instance {{ $labels.instance }})"
       description: "The target ({{ $labels.instance }}) is not reachable or is reporting as down."

---
apiVersion: monitoring.coreos.com/v1alpha1  (issue with apiversion)
kind: AlertmanagerConfig
metadata:
  name: alert-config
  labels:
    resource: prometheus
route:
  group_by: ['alertname', 'severity']
  group_wait: 30s
  group_interval: 5m
  repeat_interval: 12h
  receiver: 'webhook'

receivers:
- name: 'webhook'
  webhookConfigs:
   - url: 'http://example.com'

